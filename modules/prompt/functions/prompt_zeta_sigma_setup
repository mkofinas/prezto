#
# A simple theme that displays relevant, contextual information.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Miltiadis Kofinas <mkofinas@gmail.com>
#
# Screenshots:
#   http://i.imgur.com/nrGV6pg.png
#

#
# 16 Terminal Colors
# -- ---------------
#  0 black
#  1 red
#  2 green
#  3 yellow
#  4 blue
#  5 magenta
#  6 cyan
#  7 white
#  8 bright black
#  9 bright red
# 10 bright green
# 11 bright yellow
# 12 bright blue
# 13 bright magenta
# 14 bright cyan
# 15 bright white
#

# Load dependencies.
pmodload 'helper'

function prompt_zeta_sigma_pwd {
  local pwd="${PWD/#$HOME/~}"

  if [[ "$pwd" == (#m)[/~] ]]; then
    _prompt_zeta_sigma_pwd="$MATCH"
    unset MATCH
  else
    local pwd_without_tilde="${PWD/#$HOME/}"
    local prompt_zeta_sigma_pwd_prefix="${pwd%%/*}/"
    if [[ "${#${(@s:/:)pwd_without_tilde}}">3 ]]; then
      prompt_zeta_sigma_pwd_prefix="${prompt_zeta_sigma_pwd_prefix}.../"
    fi
    local -a last_two_directories
    last_two_directories=(${pwd_without_tilde:h:t} ${pwd_without_tilde:t})
    _prompt_zeta_sigma_pwd="${prompt_zeta_sigma_pwd_prefix}${(@j:/:M)last_two_directories}"
  fi
}

function prompt_zeta_sigma_git_info {
  if (( _prompt_zeta_sigma_precmd_async_pid > 0 )); then
    # Append Git status.
    if [[ -s "$_prompt_zeta_sigma_precmd_async_data" ]]; then
      alias typeset='typeset -g'
      source "$_prompt_zeta_sigma_precmd_async_data"
      RPROMPT+='${git_info:+${(e)git_info[status]}}'
      unalias typeset
    fi

    # Reset PID.
    _prompt_zeta_sigma_precmd_async_pid=0

    # Redisplay prompt.
    zle && zle reset-prompt
  fi
}

function prompt_zeta_sigma_precmd_async {
  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
    typeset -p git_info >! "$_prompt_zeta_sigma_precmd_async_data"
  fi

  # Signal completion to parent process.
  kill -WINCH $$
}

function prompt_zeta_sigma_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Format PWD.
  prompt_zeta_sigma_pwd

  # Get Python environment information.
  if (( $+functions[python-info] )); then
    python-info
  fi
  # Define prompts.
  RPROMPT='$python_info[virtualenv]'

  # Kill the old process of slow commands if it is still running.
  if (( _prompt_zeta_sigma_precmd_async_pid > 0 )); then
    kill -KILL "$_prompt_zeta_sigma_precmd_async_pid" &>/dev/null
  fi

  # Compute slow commands in the background.
  trap prompt_zeta_sigma_git_info WINCH
  prompt_zeta_sigma_precmd_async &!
  _prompt_zeta_sigma_precmd_async_pid=$!
}

function prompt_zeta_sigma_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)
  _prompt_zeta_sigma_precmd_async_pid=0
  _prompt_zeta_sigma_precmd_async_data="${TMPPREFIX}-prompt_zeta_sigma_data"

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_zeta_sigma_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{7}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format ''
  zstyle ':prezto:module:editor:info:keymap:primary:insert' format '%B%F{5}INS%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format '%B%F{7}REP%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:visual' format '%B%F{16}VIS%f%b'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '%B%K{5}%F{7}CMD%f%k%b'
  # Set python-info parameters.
  zstyle ':prezto:module:python:info:virtualenv' format '%F{yellow} %f%B%F{red}[%v]%f%b'
  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format '%F{7}:%f%%B%F{9}%s%f%%b'
  zstyle ':prezto:module:git:info:added' format ' %%B%F{2} %f%%b'
  zstyle ':prezto:module:git:info:ahead' format ' %%B%F{13}⬆%f%%b'
  zstyle ':prezto:module:git:info:behind' format ' %%B%F{13}⬇%f%%b'
  zstyle ':prezto:module:git:info:branch' format '%%B%F{2}%b%f%%b'
  zstyle ':prezto:module:git:info:remote' format ' %%B%F{7}%R%f%%b'
  zstyle ':prezto:module:git:info:commit' format ' %%B%F{3}%.7c%f%%b'
  zstyle ':prezto:module:git:info:deleted' format ' %%B%F{1}✖%f%%b'
  zstyle ':prezto:module:git:info:modified' format ' %%B%F{4} %f%%b'
  zstyle ':prezto:module:git:info:position' format '%%B%F{13}%p%f%%b'
  zstyle ':prezto:module:git:info:renamed' format ' %%B%F{5}➜%f%%b'
  zstyle ':prezto:module:git:info:stashed' format ' %%B%F{6} $(make-superscript "%S")%f%%b'
  zstyle ':prezto:module:git:info:unmerged' format ' %%B%F{3}═%f%%b'
  zstyle ':prezto:module:git:info:untracked' format ' %%B%F{7} %f%%b'
  zstyle ':prezto:module:git:info:keys' format \
    'status' ' %s%A%B%S%a%d%m%r%U%u($(coalesce "%b%R" "%p%c"))'

  ZLE_RPROMPT_INDENT=0

  # Define prompts.
  PROMPT='%F{3} %f%F{6}%n%f%F{3}:%f%B%F{1}[%f%b%F{1}${_prompt_zeta_sigma_pwd}%f%B%F{1}]%f%b%(!. %B%F{1}#%f%b.)
%(?,%F{2}│%f,%F{1}│%f)${editor_info[keymap]}${editor_info[insert]}${editor_info[overwrite]}%(?,%F{2}│⟶  %f,%F{1}│⟶  %f)'
  PS2='%(?,%F{2}│%f,%F{1}│%f)${editor_info[keymap]}${editor_info[insert]}${editor_info[overwrite]}%(?,%F{2}│⟶  %f,%F{1}│⟶  %f)'
  RPROMPT=''
  SPROMPT='Correct %F{1}%R%f to %F{2}%r%f [%UY%ues | %UN%uo | %Ua%ubort | %Ue%udit]? '
}

function prompt_zeta_sigma_preview {
  local +h PROMPT=''
  local +h RPROMPT=''
  local +h SPROMPT=''

  editor-info 2>/dev/null
  prompt_preview_theme 'zeta_sigma'
}

prompt_zeta_sigma_setup "$@"
